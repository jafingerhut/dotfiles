#! /usr/bin/env python3

import os, sys
import re
import argparse
import fileinput
import collections
import string

def usage():
    progname = os.path.basename(sys.argv[0])
    print("usage: %s [-h]" % (progname))
    print("""
Example usage:

    find . \! -type d | %s

Read a list of file names from standard input.  For each file name,
determine the extension, i.e. the suffix after the last dot (.)
character in the file name, if any.

Print a table of how many times each extension is found.
    """ % (progname))


def limited_fnames(fname_lst, max_to_show):
    num_to_show = len(fname_lst)
    num_not_shown = 0
    if num_to_show > max_to_show:
        num_not_shown = num_to_show - max_to_show
        num_to_show = max_to_show
    ret = ' '.join(fname_lst[0:num_to_show])
    if num_not_shown != 0:
        ret += (' (%d more)' % (num_not_shown))
    return ret


max_fnames_to_show = 3

path = os.environ['PATH']
if len(sys.argv) > 1:
    if sys.argv[1] == '-h':
        usage()
        sys.exit(0)
    path = sys.argv[1]


fnames_with_extension = collections.defaultdict(list)

nfiles = 0
for fname in fileinput.input():
    nfiles += 1
    fname = fname.rstrip()
    match = re.search(r"\.([^./]*)$", fname)
    if match:
        extension = match.group(1)
    else:
        extension = ''
    fnames_with_extension[extension].append(fname)

for extension in sorted(fnames_with_extension.keys(),
                        key=lambda ext: len(fnames_with_extension[ext])):
    if extension == '':
        continue
    fnames = ' ' + limited_fnames(fnames_with_extension[extension],
                                  max_fnames_to_show)
    print("%5u '%s'%s" % (len(fnames_with_extension[extension]), extension,
                          fnames))
nodot = len(fnames_with_extension[''])
if nodot != 0:
    print('%5u no dot in filename: %s'
          '' % (nodot, limited_fnames(fnames_with_extension[''],
                                      max_fnames_to_show)))
print('%5u files total' % (nfiles))
